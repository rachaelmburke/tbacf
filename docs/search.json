{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-07-20T18:52:38+01:00"
    },
    {
      "path": "Analysis.html",
      "title": "Analysis",
      "description": "Code to analyse data and determine number (CI) TB notifications in interrupted time series analysis/es.\n",
      "author": [
        {
          "name": "Rachael Burke and Pete Dodd",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\n\n\n",
      "last_modified": "2022-07-20T18:52:39+01:00"
    },
    {
      "path": "index.html",
      "title": "TB ACF",
      "description": "A website to share code and data from our paper about effects of ACF on TB notications in Blantyre\n",
      "author": [],
      "contents": "\nThis website is to accompany the paper XXXXX.\nThe github repo is at https://github.com/rachaelmburke/tbacf\n\n\n\n",
      "last_modified": "2022-07-20T18:52:39+01:00"
    },
    {
      "path": "setup.html",
      "title": "Set up",
      "description": "Getting data into correct format\n",
      "author": [
        {
          "name": "Rachael Burke",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nThis document takes data and merges / sets it up the way we need it for the analysis. Most of the data is already on github at Dr MacPherson’s repo and package “mlwdata” (XXXXX).\nWe load most data from mlwdata, but there is an extra spreadsheet with some additional lab data that we read in from “data” folder in this (tbacf) repo.\nLoad libraries, read in data and define some timepoints / labels\n\n\n# Important libraries\nlibrary(tidyverse)\n# library(devtools) # needed if you don't already have 'mlwdata' installed\n# install.github(\"petermacp/mlwdata\")\nlibrary(mlwdata)\nlibrary(lubridate)\n\n# libraries needed in this code / to control aesthetics / preference that you could do without\nlibrary(formatR) # to wrap text in this markdown\nlibrary(here)\n\nacf_start_date <- dmy(\"01 April 2011\") \nacf_end_date <- dmy(\"01 Oct 2014\")\n\ndiag_fct <- c(\"a) Clinically dx\", \"b) Smr/cult TB lab\", \"c) Xpert clinic\", \"d) Smr clinic\", \"e) Direct ACF\") # factor levels for how TB was diagnosed\nage_levels <- c(\"0-14\",\"15-24\",\"25-34\",\"35-44\",\"45-54\",\"55-64\",\"65+\")\n\n# This is the main data used in this analysis\ncases_g <- mlwdata::blantyre_tb_cases_2009_2018 # this is grouped data, very sparse.  Contains pre-ACF data (2009-2010)\ncases_l <- mlwdata::tb_cases_2011_2018 # this is long data from post ACF starting (2011-); this has more detail on each person with TB\n\n# this is a dataset that contains CNR quarterly; but also contains population denominator \n# for ACF and non-ACF areas for adults 15+.  \n# See documentation on PM's github, population denominators come from intrapolation from GoM census' (which were in 2008 and 2018).\npop <- mlwdata::acf_cnrs_overall %>%  \n  mutate(yq=yq(year_q)) %>% \n  mutate(acfarea=case_when(acf==\"ACF\" ~ \"b) ACF\",\n                           acf==\"Non-ACF\" ~ \"a) Non-ACF\")) %>%\n  group_by(yq) %>%\n  mutate(yq_num=cur_group_id()-1) %>% # this is the number of quarters elapsed since Q1.2009\n  dplyr::select(yq, yq_num, acfarea, population)\n\n# This is some additional data from TB lab and x01 form\nextra_info <- read_rds(here(\"data_raw\",\"extra_info.rds\")) %>%  \n  mutate(yq=yq(quarter(x05regdate, with_year=TRUE))) %>% \n  filter(yq!=ymd(\"0201-01-01\"), yq!=ymd(\"2011-01-01\"),yq!=ymd(\"2201-01-01\")) \n\n\n\nDefine some functions\n\n\n# This is function to add in population denominators, group cases and recreate useful columns (will work on whole long dataset, or subsections of it)\nadd_denoms <- function(df){\n  df %>%\n  group_by(yq) %>%\n  mutate(yq_num=cur_group_id()-1) %>% # yq_num this is number of quarter years passed since January 2009 and is used for statistical modelling.\n  left_join(pop, by=c(\"yq\", \"yq_num\", \"acfarea\")) %>%\n  mutate(cnr= (n/population) * 100000 * 4) %>%\n  mutate(yq_mid = yq + days(45)) %>%\n  mutate(acftime=case_when(yq_mid>acf_start_date & yq_mid<acf_end_date ~ \"acf\",\n                           yq_mid<acf_start_date ~ \"pre-acf\",\n                           yq_mid>acf_end_date ~ \"post-acf\")) %>%\n  mutate(acftime=factor(acftime, levels=c(\"pre-acf\", \"acf\", \"post-acf\")))\n}\n\n\n\nWrangle the 2011-2018 data\nIncluding adding in the “extra data” form lab that wasn’t in PM’s spreadsheet. Prospectively collected data.\n\n\n# This adds the lab information (and the people who were diagnosed directly through ACF vs. indirectly)\ntb_2011_2018 <- \n  cases_l %>% \n  mutate(yq=yq(year_q)) %>%\n  left_join(extra_info) %>% # the people not from Blantyre City *don't* get merged here as \"left join\" rather than full join.\n  mutate(cult_lab=case_when(\n  (l30cultures==\"Pos\" | l30cultures==\"Scanty\") & l32id==\"MTB\" ~ \"Culture confirmed\"\n)) %>% \n  mutate(diagnosed=case_when(\n    new_mode==3 ~ \"e) Direct ACF\",\n    smr_clinic==\"b) Smear-positive\" ~ \"d) Smr clinic\",\n    xpert_clinic==\"b) Xpert-positive\" ~ \"c) Xpert clinic\",\n    cult_lab==\"Culture confirmed\" ~ \"b) Smr/cult TB lab\",\n    T ~ \"a) Clinically dx\"\n  )) %>% \n  mutate(diagnosed=factor(diagnosed, levels=diag_fct)) %>%\n  mutate(facility = case_when(\n    fac_code %in% c(\"BTQE\") ~ \"a) Central hospital\",\n    fac_code  %in% c(\"BTBG\",\"BTCH\",\"BTLB\",\"BTND\",\"BTSL\",\"BTZG\",\"BTGW\")  ~ \"b) Health centre\",\n    fac_code %in% c(\"BTBAH\", \"BTCH\", \"BTMB\", \"BTMW\") ~ \"c) Private health facility\",\n    T ~ \"d) Not recorded\"\n  )) %>%\n  mutate(hiv=case_when(is.na(hiv) ~ \"c) Not recorded\", T ~ hiv)) %>%\n  mutate(art=case_when(hiv==\"b) HIV-positive\" & is.na(art)==F ~ art,  \n                       hiv==\"b) HIV-positive\" & is.na(art) ~ \"c) Not recorded\", # why does no-one have a missing ART status?\n                       T ~ NA_character_)) %>%\n  mutate(ageg = cut(age, breaks=c(0,15,25,35,45,55,65,Inf), right=F, labels=age_levels)) %>%\n  filter(ageg!=\"0-14\") %>% # this is now just adults who reside in Blantyre City  (removed 1272 children from the dataset for analysis (see methods of paper for rationale - mainly that children not targetted by ACF at all))\n  mutate(acfarea=case_when(acf==\"ACF\" ~ \"b) ACF\",\n                           acf==\"Non-ACF\" ~ \"a) Non-ACF\")) \n\n\n\nWrangle the 2009-2010 data\nRetrospectively collected (grouped) data. Make this into a “long” dataset, using “uncount”.\n\n\n# Use \"uncount\" to change grouped data into a one-observation-per-row data (have to create \"intermediate\" dfs for this, as I don't think I can \"uncount\" smr-neg and smr-pos seperately in one step)\nint_a <- cases_g %>% mutate(yq=yq(year_q)) %>% filter(yq<=dmy(\"01 Jan 2011\")) %>% pivot_wider(names_from=tbcases, values_from=n) %>% rename(micro_pos=`Smr/Xpert-positive cases`) %>% mutate(micro_neg=`All cases` - micro_pos)\nint_b <- int_a %>% dplyr::select(yq, acf, micro_pos) %>% uncount(micro_pos) %>% mutate(smr=\"smr pos\")\nint_c <- int_a %>% dplyr::select(yq, acf, micro_neg) %>% uncount(micro_neg) %>% mutate(smr=\"smr neg / not done\")\n\ntb_2009_2010 <- int_b %>% full_join(int_c)  %>% \n  mutate(diagnosed=case_when(\n    smr==\"smr pos\" ~ \"d) Smr clinic\", # there was no Xpert and no TB lab culture during 2009-2010\n    T ~ \"a) Clinically dx\"\n  )) %>% mutate(diagnosed=factor(diagnosed, levels=diag_fct)) %>%\n      mutate(acfarea=case_when(acf==\"ACF\" ~ \"b) ACF\",\n                           acf==\"Non-ACF\" ~ \"a) Non-ACF\"))\n\n\n\nMerge timeperiods and create “grouped” data for each quarter\nMerge 2009-2010 to 2011 onwards, and label time periods.\n\n\ntb_2009_2018 <- tb_2009_2010 %>% \n  full_join(tb_2011_2018) %>% \n  dplyr::select(yq, acfarea, diagnosed, acf) %>% \n  mutate(yq_mid = yq + days(45)) %>%\n  mutate(acftime=case_when(yq_mid>acf_start_date & yq_mid<acf_end_date ~ \"acf\",\n                           yq_mid<acf_start_date ~ \"pre-acf\",\n                           yq_mid>acf_end_date ~ \"post-acf\")) %>%\n  mutate(acftime=factor(acftime, levels=c(\"pre-acf\", \"acf\", \"post-acf\")))\n\n# check number of records correct\nnrow(tb_2009_2010) + nrow(tb_2011_2018)\n\n\n[1] 20119\n\nnrow(tb_2009_2018) # same\n\n\n[1] 20119\n\nThen created “grouped” datasets, that contain the “case notification rates” (CNRs) rather than just number of cases. This is adult TB diagnoses per 100,000 adult population, by ACF area (“add_denoms” function specifed above under section “Start”).\n\n\n# This is cnrs for each of four levels of how diagnosed\ncnrs_d <- tb_2009_2018 %>% group_by(yq, acfarea, diagnosed) %>% summarise(n=n()) %>% \n  complete(.,yq, acfarea, diagnosed, fill = list(n=0)) %>% # levels that have no people, should exist in data, with \"0\" people\n  ungroup() %>%\n  add_denoms()\n\n# This is all form\ncnrs_all <- tb_2009_2018 %>% group_by(yq, acfarea) %>% summarise(n=n()) %>% \n  ungroup() %>%\n  add_denoms()\n\n# This is smear pos just from clinic (i.e excluding those subsequently micro confirmed in TB lab)\ncnrs_smp_clinic <- tb_2009_2018 %>% filter(diagnosed==\"c) Xpert clinic\" | diagnosed==\"d) Smr clinic\" | diagnosed==\"e) Direct ACF\") %>% \n  group_by(yq, acfarea) %>% \n  summarise(n=n()) %>% \n  ungroup() %>%\n  add_denoms()\n\n\n\nSave these datasets (with a reminder of what they are).\n\n\nsaveRDS(tb_2009_2018, file=here(\"data\",\"tb_2009_2018.rds\")) # Each row represents one adult in Blantyre City diagnosed with TB, information on method of TB diagnosis, quarter-year of diagnosis and whether they lived in an ACF or non-ACF area.\nsaveRDS(tb_2011_2018, file=here(\"data\",\"tb_2010_2018.rds\")) # Each row represents one adult in Blantyre City diagnosed with TB, but with more information per person than the 2009_2010 file (i.e. includes HIV status, age and sex)\nsaveRDS(pop, file=here(\"data\",\"pop.rds\")) # Blantyre City adult population by quarter-year and ACF vs. non-ACF area\n\nsaveRDS(cnrs_d, file=here(\"data\",\"cnrs_d.rds\")) # TB CNRs (adult TB diagnoses per 100,000 adults) by method of diagnosis\nsaveRDS(cnrs_all, file=here(\"data\",\"cnrs_all.rds\")) # All form TB CNRs\nsaveRDS(cnrs_smp_clinic, file=here(\"data\",\"cnrs_smp_clinic.rds\")) # CNR for smr positive / micro confirmed TB (at the time of starting TB treatment)\n\n\n\n\n\n\n",
      "last_modified": "2022-07-20T18:52:44+01:00"
    },
    {
      "path": "tableandfig.html",
      "title": "Tables and Figures",
      "description": "Code to create tables and figures from our paper.\n",
      "author": [
        {
          "name": "Rachael Burke",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2022-07-20T18:52:45+01:00"
    }
  ],
  "collections": []
}
