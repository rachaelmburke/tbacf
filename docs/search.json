{
  "articles": [
    {
      "path": "a_setup.html",
      "title": "Set up",
      "description": "Getting data into correct format\n",
      "author": [
        {
          "name": "Rachael Burke",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nThis document takes data and merges / sets it up the way we need it for the analysis. Most of the data is already on github at Dr MacPherson’s repo and package “mlwdata” (XXXXX).\nWe load most data from mlwdata, but there is an extra spreadsheet with some additional lab data that we read in from “data_sharing” folder in this (tbacf) repo.\nNote that the end of this code puts .rds files in a “data” folder. “Data” is not included in this repo (but can be recreated locally through running this markdown file and using data from “mlwdata” and “extra_data” which is in this repo). Note that “here” in my version is actually heading one file division up (into the “main” repo and not “docs”, where this .Rmd is saved). You may need to fix the relative file paths to the “extra data” spreadsheet to make this work for you.\nLoad libraries, read in data and define some timepoints / labels\n\n\n# Important libraries\nlibrary(tidyverse)\n# library(devtools) # needed if you don't already have 'mlwdata' installed\n# install.github(\"petermacp/mlwdata\")\nlibrary(mlwdata)\nlibrary(lubridate)\n\n# libraries needed in this code / to control aesthetics / preference that you could do without\nlibrary(formatR) # to wrap text in this markdown\nlibrary(here)\n\nacf_start_date <- dmy(\"01 April 2011\") \nacf_end_date <- dmy(\"01 Oct 2014\")\n\ndiag_fct <- c(\"a) Clinically dx\", \"b) Smr/cult TB lab\", \"c) Xpert clinic\", \"d) Smr clinic\", \"e) Direct ACF\") # factor levels for how TB was diagnosed\nage_levels <- c(\"0-14\",\"15-24\",\"25-34\",\"35-44\",\"45-54\",\"55-64\",\"65+\")\n\n# This is the main data used in this analysis\ncases_g <- mlwdata::blantyre_tb_cases_2009_2018 # this is grouped data, very sparse.  Contains pre-ACF data (2009-2010)\ncases_l <- mlwdata::tb_cases_2011_2018 # this is long data from post ACF starting (2011-); this has more detail on each person with TB\n\n# this is a dataset that contains CNR quarterly; but also contains population denominator \n# for ACF and non-ACF areas for adults 15+.  \n# See documentation on PM's github, population denominators come from intrapolation from GoM census' (which were in 2008 and 2018).\npop <- mlwdata::acf_cnrs_overall %>%  \n  mutate(yq=yq(year_q)) %>% \n  mutate(acfarea=case_when(acf==\"ACF\" ~ \"b) ACF\",\n                           acf==\"Non-ACF\" ~ \"a) Non-ACF\")) %>%\n  group_by(yq) %>%\n  mutate(yq_num=cur_group_id()-1) %>% # this is the number of quarters elapsed since Q1.2009\n  dplyr::select(yq, yq_num, acfarea, population)\n\n# This is some additional data from TB lab and x01 form\nextra_info <- readRDS(here(\"data_raw\",\"extra_info.rds\"))\n\n\n\nDefine some functions\n\n\n# This is function to add in population denominators, group cases and recreate useful columns (will work on whole long dataset, or subsections of it)\nadd_denoms <- function(df){\n  df %>%\n  group_by(yq) %>%\n    mutate(yq_num=cur_group_id()-1) %>% # yq num this is number of quarter years passed since January 2009 and is used for statistical modelling.\n    left_join(pop, by=c(\"yq\", \"yq_num\", \"acfarea\")) %>%\n    mutate(cnr= (n/population) * 100000 * 4) %>%\n    mutate(yq_mid = yq + days(45)) %>%\n    mutate(acftime=case_when(yq_mid>acf_start_date & yq_mid<acf_end_date ~ \"acf\",\n                           yq_mid<acf_start_date ~ \"pre-acf\",\n                           yq_mid>acf_end_date ~ \"post-acf\")) %>%\n    mutate(acftime=factor(acftime, levels=c(\"pre-acf\", \"acf\", \"post-acf\")))\n}\n\n\n\nWrangle the 2011-2018 data\nIncluding adding in the “extra data” form lab that wasn’t in PM’s spreadsheet. Prospectively collected data.\n\n\n# This adds the lab information (and the people who were diagnosed directly through ACF vs. indirectly)\ntb_2011_2018 <- cases_l %>% \n  mutate(yq=yq(year_q)) %>%\n  left_join(extra_info) %>% # the people not from Blantyre City *don't* get merged here as \"left join\" rather than full join.\n  mutate(cult_lab=case_when(\n  (l30cultures==\"Pos\" | l30cultures==\"Scanty\") & l32id==\"MTB\" ~ \"Culture confirmed\")) %>% \n  mutate(diagnosed=case_when(\n    new_mode==3 ~ \"e) Direct ACF\",\n    smr_clinic==\"b) Smear-positive\" ~ \"d) Smr clinic\",\n    xpert_clinic==\"b) Xpert-positive\" ~ \"c) Xpert clinic\",\n    cult_lab==\"Culture confirmed\" ~ \"b) Smr/cult TB lab\",\n    T ~ \"a) Clinically dx\")) %>% \n  mutate(facility = case_when(\n    fac_code %in% c(\"BTQE\") ~ \"a) Central hospital\",\n    fac_code  %in% c(\"BTBG\",\"BTCH\",\"BTLB\",\"BTND\",\"BTSL\",\"BTZG\",\"BTGW\")  ~ \"b) Health centre\",\n    fac_code %in% c(\"BTBAH\", \"BTCH\", \"BTMB\", \"BTMW\") ~ \"c) Private health facility\",\n    T ~ \"d) Not recorded\")) %>%\n  mutate(hiv=case_when(is.na(hiv) ~ \"c) Not recorded\", T ~ hiv)) %>%\n  mutate(art=case_when(hiv==\"b) HIV-positive\" & is.na(art)==F ~ art,  \n                       hiv==\"b) HIV-positive\" & is.na(art) ~ \"c) Not recorded\", # why does no-one have a missing ART status?\n                       T ~ NA_character_)) %>%\n  mutate(ageg = cut(age, breaks=c(0,15,25,35,45,55,65,Inf), right=F, labels=age_levels)) %>%\n  filter(ageg!=\"0-14\") %>% # this is now just adults who reside in Blantyre City  (removed 1272 children from the dataset for analysis (see methods of paper for rationale - mainly that children not targetted by ACF at all))\n  mutate(acfarea=case_when(acf==\"ACF\" ~ \"b) ACF\",\n                           acf==\"Non-ACF\" ~ \"a) Non-ACF\")) \n\n\n\nWrangle the 2009-2010 data\nRetrospectively collected (grouped) data. Make this into a “long” dataset, using “uncount”.\n\n\n# Use \"uncount\" to change grouped data into a one-observation-per-row data (have to create \"intermediate\" dfs for this, as I don't think I can \"uncount\" smr-neg and smr-pos seperately in one step)\nint_a <- cases_g %>% mutate(yq=yq(year_q)) %>% filter(yq<=dmy(\"01 Jan 2011\")) %>% pivot_wider(names_from=tbcases, values_from=n) %>% rename(micro_pos=`Smr/Xpert-positive cases`) %>% mutate(micro_neg=`All cases` - micro_pos)\nint_b <- int_a %>% dplyr::select(yq, acf, micro_pos) %>% uncount(micro_pos) %>% mutate(smr=\"smr pos\")\nint_c <- int_a %>% dplyr::select(yq, acf, micro_neg) %>% uncount(micro_neg) %>% mutate(smr=\"smr neg / not done\")\n\ntb_2009_2010 <- int_b %>% full_join(int_c)  %>% \n  mutate(diagnosed=case_when(\n    smr==\"smr pos\" ~ \"d) Smr clinic\", # there was no Xpert and no TB lab culture during 2009-2010\n    T ~ \"a) Clinically dx\"\n  )) %>% mutate(diagnosed=factor(diagnosed, levels=diag_fct)) %>%\n      mutate(acfarea=case_when(acf==\"ACF\" ~ \"b) ACF\",\n                           acf==\"Non-ACF\" ~ \"a) Non-ACF\"))\n\n\n\nMerge timeperiods and create “grouped” data for each quarter\nMerge 2009-2010 to 2011 onwards, and label time periods.\n\n\ntb_2009_2018 <- tb_2009_2010 %>% \n  full_join(tb_2011_2018) %>% \n  dplyr::select(yq, acfarea, diagnosed, acf) %>% \n  mutate(yq_mid = yq + days(45)) %>%\n  mutate(acftime=case_when(yq_mid>acf_start_date & yq_mid<acf_end_date ~ \"acf\",\n                           yq_mid<acf_start_date ~ \"pre-acf\",\n                           yq_mid>acf_end_date ~ \"post-acf\")) %>%\n  mutate(acftime=factor(acftime, levels=c(\"pre-acf\", \"acf\", \"post-acf\")))\n\n# check number of records correct\nnrow(tb_2009_2010) + nrow(tb_2011_2018)\n\n\n[1] 20119\n\nnrow(tb_2009_2018) # same\n\n\n[1] 20119\n\nThen created “grouped” datasets, that contain the “case notification rates” (CNRs) rather than just number of cases. This is adult TB diagnoses per 100,000 adult population, by ACF area (“add_denoms” function specifed above under section “Start”).\n\n\n# This is cnrs for each of four levels of how diagnosed\ncnrs_d <- tb_2009_2018 %>% group_by(yq, acfarea, diagnosed) %>% summarise(n=n()) %>% \n  complete(.,yq, acfarea, diagnosed, fill = list(n=0)) %>% # levels that have no people, should exist in data, with \"0\" people\n  ungroup() %>%\n  add_denoms()\n\n# This is all form\ncnrs_all <- tb_2009_2018 %>% group_by(yq, acfarea) %>% summarise(n=n()) %>% \n  ungroup() %>%\n  add_denoms()\n\n# This is smear pos just from clinic (i.e excluding those subsequently micro confirmed in TB lab)\ncnrs_smp_clinic <- tb_2009_2018 %>% filter(diagnosed==\"c) Xpert clinic\" | diagnosed==\"d) Smr clinic\" | diagnosed==\"e) Direct ACF\") %>% \n  group_by(yq, acfarea) %>% \n  summarise(n=n()) %>% \n  ungroup() %>%\n  add_denoms()\n\n\n\nSave these datasets (with a reminder of what they are).\n\n\nsaveRDS(tb_2009_2018, file=here(\"data\",\"tb_2009_2018.rds\")) # Each row represents one adult in Blantyre City diagnosed with TB, information on method of TB diagnosis, quarter-year of diagnosis and whether they lived in an ACF or non-ACF area.\nsaveRDS(tb_2011_2018, file=here(\"data\",\"tb_2010_2018.rds\")) # Each row represents one adult in Blantyre City diagnosed with TB, but with more information per person than the 2009_2010 file (i.e. includes HIV status, age and sex)\nsaveRDS(pop, file=here(\"data\",\"pop.rds\")) # Blantyre City adult population by quarter-year and ACF vs. non-ACF area\n\nsaveRDS(cnrs_d, file=here(\"data\",\"cnrs_d.rds\")) # TB CNRs (adult TB diagnoses per 100,000 adults) by method of diagnosis\nsaveRDS(cnrs_all, file=here(\"data\",\"cnrs_all.rds\")) # All form TB CNRs\nsaveRDS(cnrs_smp_clinic, file=here(\"data\",\"cnrs_smp_clinic.rds\")) # CNR for smr positive / micro confirmed TB (at the time of starting TB treatment)\n\n\n\n\n\n\n",
      "last_modified": "2022-07-20T21:29:44+01:00"
    },
    {
      "path": "a_tableandfig.html",
      "title": "A Tables and Figures",
      "description": "Code to create tables and figures from our paper.\n",
      "author": [
        {
          "name": "Rachael Burke",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nLoad data\nFigure 1: Map\nTable 1\nFigure 2\nFig 3 Base plot\nNumbers quoted in text\n\nThis (A) markdown shows the descriptive tables and figures, and the “base” plots of actual observed TB diagnoses. We use this base plots in the “analysis” markdown to build up lines showing predictions [including showing our working as going along].\nThe final (post-analysis) tables and figs are drawn in “b_tableandfig.Rmd”\nLoad data\n\n\nlibrary(here)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(lubridate)\n\nacf_start_date <- dmy(\"01 April 2011\") \nacf_end_date <- dmy(\"30 Sep 2014\")\n\n# These are the \"long\" datasets (one row per person with TB)\ntb_2009_2018 <- readRDS(file=here(\"data\",\"tb_2009_2018.rds\")) # Each row represents one adult in Blantyre City diagnosed with TB, information on method of TB diagnosis, quarter-year of diagnosis and whether they lived in an ACF or non-ACF area.\ntb_2011_2018 <- readRDS(file=here(\"data\",\"tb_2010_2018.rds\")) # Each row represents one adult in Blantyre City diagnosed with TB, but with more information per person than the 2009_2010 file (i.e. includes HIV status, age and sex)\npop <- readRDS(file=here(\"data\",\"pop.rds\")) # Blantyre City adult population by quarter-year and ACF vs. non-ACF area\n\n# These are the \"wide\" datasets with TB notifications grouped by quarter and with CNR\ncnrs_smp_clinic <- readRDS(here(\"data\",\"cnrs_smp_clinic.rds\"))\ncnrs_all <- readRDS(here(\"data\",\"cnrs_all.rds\"))  # all form\ncnrs_d <- readRDS(here(\"data\",\"cnrs_d.rds\")) # cnrs by method of diagnosis\n\n\n\nFigure 1: Map\nThis is a map of Blantyre. Using “tmap”. Note that shape files are not included in this repo as they have been extremely “fussy” and I have struggled to get them working properly.\n\n\nlibrary(sf)\nlibrary(tmaptools)\nlibrary(tmap)\nlibrary(OpenStreetMap)\n\n\nblantyre_city <- sf::st_read(here(\"data_raw\",\"blantyre_tas.kml\")) # rows 1-9 are Blantyre Rural TAs\n\n\nReading layer `blantyre_tas' from data source \n  `/Users/rachaelburke/Documents/2021_ACF_Blantyre/0_FINAL_ACF/tbacf/data_raw/blantyre_tas.kml' \n  using driver `KML'\nSimple feature collection with 31 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 34.71934 ymin: -16.01844 xmax: 35.13327 ymax: -15.34981\nGeodetic CRS:  WGS 84\n\nacf <- blantyre_city[c(9,14:18),]\nnonacf <- blantyre_city[c(10:13,19:31),]\n\nclinic <- sf::st_read(here(\"data_raw\",\"waypoints of facilities and landmarks.shp\")) \n\n\nReading layer `waypoints of facilities and landmarks' from data source `/Users/rachaelburke/Documents/2021_ACF_Blantyre/0_FINAL_ACF/tbacf/data_raw/waypoints of facilities and landmarks.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 79 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 34.96957 ymin: -15.85985 xmax: 35.09923 ymax: -15.64464\nGeodetic CRS:  WGS 84\n\nclinic <- clinic[c(1:11),]\nosm <- read_osm(bb(blantyre_city[c(9:31),], current.projection=\"wgs84\"), ext=1.1, raster=F)\n\ntm_shape(osm) + \n  tm_rgb() +\n  tm_shape(nonacf) +\n  tm_fill(alpha=0.2, col=\"#46ACC8\") +\n  tm_borders(col=\"#46ACC8\", alpha=0.8) +\n  tm_shape(acf) +\n  tm_fill(alpha=0.2, col=\"#B40F20\") +\n  tm_borders(col=\"#B40F20\", alpha=0.8) +\n  tm_shape(clinic) +\n  tm_symbols(size=0.2, shape=15, col=\"black\") +\n  tm_scale_bar(color.dark = \"black\") +\n  tm_compass(position=c(\"right\",\"top\")) +\n  tm_add_legend(type=\"fill\", col=c(\"#46ACC8\",\"#B40F20\"), labels=c(\"Non-ACF area\",\"ACF area\")) +\n  tm_add_legend(type=\"symbol\", col=\"black\", shape=15, labels=c(\"Healthcare clinic\")) +\n  tm_legend(legend.position=c(\"left\",\"bottom\"))\n\n\n\n\nTable 1\nCame from data in Dr M Nliwasa’s work / PhD thesis.\nFigure 2\n\n\ncnrs_d <- cnrs_d %>% \n  mutate(acfarea_l = \n           case_when(acfarea==\"b) ACF\" ~ \"ACF area\", \n                     acfarea==\"a) Non-ACF\" ~ \"Non-ACF area\")) # this is so that the graph gets labelled properly / clearly\n\ndiagnosis_method <- ggplot(cnrs_d, aes(x=yq_mid + days(45), y=cnr, fill=diagnosed)) +\n  #annotate(geom=\"rect\", xmin=acf_start_date, xmax=acf_end_date, ymin=-Inf, ymax=Inf, alpha=0.4) +\n  geom_area(alpha=0.6 , size=.5, colour=\"black\", data=.%>% filter(acfarea==\"b) ACF\")) +\n  geom_area(alpha=0.6 , size=.5, colour=\"black\", data=.%>% filter(acfarea==\"a) Non-ACF\")) +\n  geom_vline(xintercept=acf_start_date, linetype=2) +\n  geom_vline(xintercept=acf_end_date, linetype=2) +\n  facet_wrap(~acfarea_l) +\n  labs(x=\"Year and quarter\",\n       y=\"Case notification rate\",\n       fill=\"Method of TB dx\") +\n  scale_fill_manual(values=c(\"#46ACC8\",\"#E58601\",\"#E2D200\",\"#B40F20\", \"#68BB59\")) +\n  theme_bw()\n\ndiagnosis_method\n\n\n\nggsave(plot=diagnosis_method, file=here(\"figures\",\"Fig2_CNR_by_diagnosis_method.pdf\"), width=10, height=7)\n\n\n\nFig 3 Base plot\nThis gets built up later with data from “analysis.rmd”. See b_tableandfig for final figure from paper.\n\n\nplot_fx <- function(df){\nggplot(df) +\n  annotate(geom=\"rect\", xmin=acf_start_date, xmax=acf_end_date, ymin=-Inf, ymax=Inf, alpha=0.1) +\n  geom_point(aes(x=yq_mid, y=cnr, color=acfarea), shape=20, alpha=0.8) +\n  geom_line(aes(y=cnr, x=yq_mid, color=acfarea), alpha=0.3) +\n  labs(x=\"Time (quarter-year)\",\n       y = \"Case notification rate (per 100,000 person-years)\",\n       color=\"Area \\n(ACF vs. non-ACF)\",\n       caption=\"Shaded area is time ACF was ongoing\") +\n  scale_color_brewer(palette = \"Set1\") +\n  theme_bw()\n}\n\ncnr_base_plot_all <- plot_fx(cnrs_all) +\n  labs(title=\"All form TB\")\ncnr_base_plot_all\n\n\n\ncnr_base_plot_micro_clinic <- plot_fx(cnrs_smp_clinic) +\n  labs(title=\"Smr/Xpert positive TB\")\ncnr_base_plot_micro_clinic\n\n\n\nsave(cnr_base_plot_micro_clinic, file=here(\"data/cnr_base_plot_micro_clinic.rdata\")) # save both the .rdata object so can re-draw and add\nggsave(plot=cnr_base_plot_micro_clinic, here(\"figures\",\"cnr_base_plot_micro_clinic.pdf\"), width=10, height=7) # and the pdf\n\nsave(cnr_base_plot_all, file=here(\"data/cnr_base_plot_all.rdata\")) # save \nggsave(plot=cnr_base_plot_all, file=here(\"figures\",\"cnr_base_plot_all.pdf\"), width=10, height=7)\n\n\n\nNumbers quoted in text\nNumbers quoted in text.\n\n\npop %>% filter(yq==dmy(\"01 Jan 2011\"))\n\n\n# A tibble: 2 × 4\n# Groups:   yq [1]\n  yq         yq_num acfarea    population\n  <date>      <dbl> <chr>           <dbl>\n1 2011-01-01      8 b) ACF         130173\n2 2011-01-01      8 a) Non-ACF     290961\n\ntb_2009_2018 %>% nrow()\n\n\n[1] 20119\n\ntb_2009_2018 %>% tabyl(acf) %>% adorn_totals()\n\n\n     acf     n   percent\n     ACF  7915 0.3934092\n Non-ACF 12204 0.6065908\n   Total 20119 1.0000000\n\ntb_2009_2018 %>% tabyl(diagnosed) %>% adorn_totals()\n\n\n          diagnosed     n     percent\n   a) Clinically dx 10705 0.532084100\n b) Smr/cult TB lab  1816 0.090262936\n    c) Xpert clinic  1015 0.050449824\n      d) Smr clinic  6462 0.321188926\n      e) Direct ACF   121 0.006014215\n              Total 20119 1.000000000\n\ntb_2009_2018 %>% filter(diagnosed==\"d) Smr clinic\" | diagnosed==\"c) Xpert clinic\" | diagnosed==\"e) Direct ACF\") %>% nrow()\n\n\n[1] 7598\n\n(tb_2009_2018 %>% filter(diagnosed==\"d) Smr clinic\" | diagnosed==\"c) Xpert clinic\" | diagnosed==\"e) Direct ACF\") %>% nrow()) / nrow(tb_2009_2018)\n\n\n[1] 0.377653\n\ntb_2009_2018 %>% filter(diagnosed==\"a) Clinically dx\" | diagnosed==\"b) Smr/cult TB lab\") %>% nrow()\n\n\n[1] 12521\n\n(tb_2009_2018 %>% filter(diagnosed==\"a) Clinically dx\" | diagnosed==\"b) Smr/cult TB lab\") %>% nrow()) / nrow(tb_2009_2018)\n\n\n[1] 0.622347\n\ntb_2011_2018 %>% tabyl(sex) %>% adorn_totals()\n\n\n    sex     n   percent\n Female  5813 0.3814805\n   Male  9425 0.6185195\n  Total 15238 1.0000000\n\ntb_2011_2018 %>% tabyl(ageg) %>% adorn_totals()\n\n\n  ageg     n    percent\n  0-14     0 0.00000000\n 15-24  2148 0.14096338\n 25-34  5422 0.35582097\n 35-44  4548 0.29846437\n 45-54  1802 0.11825699\n 55-64   783 0.05138470\n   65+   535 0.03510959\n Total 15238 1.00000000\n\nsummary((tb_2011_2018 %>% filter(sex==\"Female\"))$age)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  15.00   26.00   33.00   35.27   41.00   89.00 \n\nsummary((tb_2011_2018 %>% filter(sex==\"Male\"))$age)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  15.00   29.00   35.00   37.14   43.00   94.00 \n\ntb_2011_2018 %>% tabyl(hiv) %>% adorn_totals()\n\n\n             hiv     n    percent\n a) HIV-negative  4008 0.26302664\n b) HIV-positive 10184 0.66832918\n c) Not recorded  1046 0.06864418\n           Total 15238 1.00000000\n\npop %>% filter(yq==dmy(\"1 jan 2009\"))\n\n\n# A tibble: 2 × 4\n# Groups:   yq [1]\n  yq         yq_num acfarea    population\n  <date>      <dbl> <chr>           <dbl>\n1 2009-01-01      0 b) ACF         123155\n2 2009-01-01      0 a) Non-ACF     275665\n\npop %>% filter(yq==dmy(\"1 oct 2018\"))\n\n\n# A tibble: 2 × 4\n# Groups:   yq [1]\n  yq         yq_num acfarea    population\n  <date>      <dbl> <chr>           <dbl>\n1 2018-10-01     39 b) ACF         157331\n2 2018-10-01     39 a) Non-ACF     350156\n\ncnrs_smp_clinic %>% \n  group_by(acfarea,acftime) %>%\n  summarise(cnr=mean(cnr))\n\n\n# A tibble: 6 × 3\n# Groups:   acfarea [2]\n  acfarea    acftime    cnr\n  <chr>      <fct>    <dbl>\n1 a) Non-ACF pre-acf   169.\n2 a) Non-ACF acf       154.\n3 a) Non-ACF post-acf  126.\n4 b) ACF     pre-acf   219.\n5 b) ACF     acf       263.\n6 b) ACF     post-acf  191.\n\ncnrs_all  %>% \n  group_by(acfarea,acftime) %>%\n  summarise(cnr=mean(cnr))\n\n\n# A tibble: 6 × 3\n# Groups:   acfarea [2]\n  acfarea    acftime    cnr\n  <chr>      <fct>    <dbl>\n1 a) Non-ACF pre-acf   522.\n2 a) Non-ACF acf       413.\n3 a) Non-ACF post-acf  315.\n4 b) ACF     pre-acf   548.\n5 b) ACF     acf       673.\n6 b) ACF     post-acf  493.\n\n\n\ntb_2011_2018 %>% nrow()\n\n\n[1] 15238\n\ntb_2011_2018 %>% tabyl(diagnosed)\n\n\n          diagnosed    n     percent\n   a) Clinically dx 7525 0.493831211\n b) Smr/cult TB lab 1816 0.119175745\n    c) Xpert clinic 1015 0.066609791\n      d) Smr clinic 4761 0.312442578\n      e) Direct ACF  121 0.007940675\n\n7525 + 1816\n\n\n[1] 9341\n\n# This is about how many of those who were initially \"smear neg\" when starting TB treatment were subsequently micro confirmed by culture (by ACF area and ACF time - during ACF vs. post ACF).\n# My prefered 'tabyl' options (add totals, percentages)\nrmb_tabyl <- function(df) {\n df %>% adorn_totals(where=\"col\") %>% adorn_percentages(denominator=\"row\") %>% adorn_pct_formatting(digits=2) %>% adorn_ns()\n}\n\ntb_2011_2018 %>% \n  filter(yq>=dmy(\"01 April 2011\")  & yq<dmy(\"01 Oct 2014\")) %>% \n  filter(diagnosed==\"a) Clinically dx\" | diagnosed==\"b) Smr/cult TB lab\") %>%\n  mutate(diagnosed=as.character(diagnosed)) %>%\n  tabyl(acfarea,diagnosed) %>% rmb_tabyl()\n\n\n    acfarea a) Clinically dx b) Smr/cult TB lab          Total\n a) Non-ACF    79.15% (2186)       20.85% (576) 100.00% (2762)\n     b) ACF    77.94% (1526)       22.06% (432) 100.00% (1958)\n\ntb_2011_2018 %>% \n  filter(yq>=dmy(\"01 April 2011\")  & yq<dmy(\"01 Oct 2014\")) %>% \n  mutate(diagnosed=as.character(diagnosed)) %>%\n  filter(diagnosed==\"a) Clinically dx\" | diagnosed==\"b) Smr/cult TB lab\") %>%\n  tabyl(acfarea, diagnosed) %>% chisq.test(.,tabyl_results=T)\n\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  .\nX-squared = 0.92627, df = 1, p-value = 0.3358\n\ntb_2009_2018 %>% \n  filter(acfarea==\"b) ACF\") %>%\n  filter(yq>=dmy(\"01 April 2011\")) %>% \n  mutate(diagnosed=as.character(diagnosed)) %>%\n  filter(diagnosed==\"a) Clinically dx\" | diagnosed==\"b) Smr/cult TB lab\") %>%\n  tabyl(acftime,diagnosed) %>% rmb_tabyl()\n\n\n  acftime a) Clinically dx b) Smr/cult TB lab          Total\n  pre-acf         -    (0)            -   (0) 100.00%    (0)\n      acf    77.94% (1526)       22.06% (432) 100.00% (1958)\n post-acf    80.18% (1541)       19.82% (381) 100.00% (1922)\n\ntb_2009_2018 %>% \n  filter(acfarea==\"b) ACF\") %>%\n  filter(yq>=dmy(\"01 April 2011\")) %>% \n  mutate(diagnosed=as.character(diagnosed)) %>%\n  mutate(acftime=as.character(acftime)) %>%\n  filter(diagnosed==\"a) Clinically dx\" | diagnosed==\"b) Smr/cult TB lab\") %>%\n  tabyl(acftime,diagnosed) %>% chisq.test()\n\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  .\nX-squared = 2.8052, df = 1, p-value = 0.09396\n\n\n\n\n",
      "last_modified": "2022-07-20T21:29:58+01:00"
    },
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-07-20T21:29:59+01:00"
    },
    {
      "path": "Analysis.html",
      "title": "Analysis",
      "description": "Code to analyse data and determine number (CI) TB notifications in interrupted time series analysis/es.\n",
      "author": [
        {
          "name": "Rachael Burke and Pete Dodd",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nACF area only (no control)Model\nPredictions / point estimates for Bac+\nModel and predictions / point estimates for all form TB\nDelta method to calculate CIs\n\nWith controlModel\nThe point estimates (Bac+)\nThe point estimates (all form TB)\nThe formula for the difference\nAnd the SE and CI of difference (Bac+)\nSE and CI of difference (all form)\n\nCollecting the estimates and their CIs here in one place\n\nThis is the code we used for implementing the analysis. Appendix XX in our paper shows the rationale and mathematical formula and will be useful for understanding this code.\nThis is in a mixture of tidverse and baseR (data.table); reflecting our collaboration!.\nsmp_c = bacteriologically confirmed at the clinic at time of starting TB treatment [“smp” = smear pos, but NB. misleading abbreviation as many Bac+ are Xpert pos] all_f = all form TB\n\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(here)\nlibrary(broom)\nlibrary(data.table)\n\nacf_start_date <- dmy(\"01 April 2011\") \nacf_end_date <- dmy(\"30 Sep 2014\")\n\n# Data - take out post-ACF time\nsmp_c <- readRDS(here(\"data\",\"cnrs_smp_clinic.rds\")) %>% filter(acftime!=\"post-acf\") %>% as.data.table() \nall_f <- readRDS(here(\"data\",\"cnrs_all.rds\")) %>% filter(acftime!=\"post-acf\") %>% as.data.table() # all form\n\n# Base graphs (to illustrate model predictions / fit to real data as we go)\nload(here(\"data/cnr_base_plot_micro_clinic.rdata\"))\nload(here(\"data/cnr_base_plot_all.rdata\"))\n\nt1 <- smp_c[acftime=='acf',min(yq_num)] # t1 = START of ACF\nt2 <- smp_c[acftime=='acf',max(yq_num)] # t2 = END of ACF\nT <- t2-t1+1  # plus one because goes from START of first quarter to END of last quarter; this is the TIME (in number of quarters) from ACF starting.\n\n\n\nACF area only (no control)\nModel\nwoc = “without control”.\n\n\nmod.woc <- glm(data=smp_c[acfarea==\"b) ACF\"],\n               family=poisson,\n               n ~\n                 offset(log(population)) +\n                 (1 + yq_num) +           # k_1 + s_1.t\n                 acftime + acftime:yq_num # I(t)(a+b.t)\n               )\n\ntidy(mod.woc)\n\n\n# A tibble: 4 × 5\n  term              estimate std.error statistic     p.value\n  <chr>                <dbl>     <dbl>     <dbl>       <dbl>\n1 (Intercept)        -7.41      0.0722  -103.    0          \n2 yq_num             -0.0264    0.0155    -1.70  0.0887     \n3 acftimeacf          0.696     0.131      5.32  0.000000101\n4 yq_num:acftimeacf  -0.0142    0.0170    -0.833 0.405      \n\nPredictions / point estimates for Bac+\nUse model and equation to get and plot point estimates for cases and CNR (all form and smear pos at clinic)\n\n\n# Population during ACF time\nP <- smp_c[acfarea==\"b) ACF\" & yq_num>=t1 & yq_num<=t2,population] # this is the population at any level\n\n# The coefficient that go into estimating theta (= difference in cases / CNRs between \"real\" and \"counterfactual\")\ntheta.woc <- list(\n  itz=t1:t2, # itz it a vector of all the \"acftime\" quarters\n  Pop=P,\n  k=coef(mod.woc)['(Intercept)'],\n  s=coef(mod.woc)['yq_num'],\n  a=coef(mod.woc)['acftimeacf'],\n  b=coef(mod.woc)['yq_num:acftimeacf']\n)\n\n## Make data - numbers of diagnoses (\"cases\")\ntz <- seq(from=min(smp_c$yq_num),to=max(smp_c$yq_num),by=0.1) #time as a near-continous variable\nTZ <- smp_c[acfarea==\"b) ACF\",yq_num] # time as each quarter\nIt <- ifelse(tz>=t1 & tz<=t2,1,0)  #indicator\nnap <- with(data=theta.woc,{exp(k + s*tz)}) #counterfactual: cases per one person per quarter (ie. no offset term)\nnap2 <- with(data=theta.woc,{exp(It*(a+b*tz))}) #ACF effect: cases per one person per quarter\nnapc <- (nap*nap2)[tz%%1==0] # what actually happened (ie. adding on ACF effect): cases per one person per quarter\n\npop <- smp_c[acfarea==\"b) ACF\",population] # population in ACF area\npopc <- smp_c[acfarea==\"a) Non-ACF\",population] # population in non-ACF area (not needed now, but create for later 'with control' scenario)\n\n# Note re \"with\" function (see \"nap\" / \"nap2\" / \"napc\") as I wasn't familar at first\n# with = \"Evaluate an R expression in an environment constructed from data, possibly modifying (a copy of) the original data.\"\n# This is a line of code to evaluate \"k + s*tz\" and \"It*(a+b*tz)\" in an enviroment where those bits are what they are in theta.woc (but presumably also using the global environment, since tz is in global enviroment rather than in 'theta.woc; environment?)\n\n# Make data including CNR\ncnr1 <- with(data=theta.woc,{(exp(k + s*tz)) * 100000 * 4}) # cases per one person per quarter * 100,000 people * 4 quarters = CNR.  In counterfactual (no ACF) conditions.\ncnr2 <- with(data=theta.woc,{exp(It*(a+b*tz)) * 100000 * 4}) # cases per one person per quarter * 100,000 people * 4 quarters = CNR. Plus effect of ACF.\ncnr3 <- (nap*nap2) * 100000 * 4\n\ndf_cnr_woc <- tibble(yq_num=tz, \n                     yq= seq(from=min(smp_c$yq), to=max(smp_c$yq + months(3)), length.out = length(tz)), # make 'tz' correspond to real dates\n                     cfact=cnr1, \n                     real=cnr3)\n\ndf_cases_woc <- tibble(yq_num=TZ, \n                     yq= seq(from=min(smp_c$yq), to=max(smp_c$yq + months(3)), length.out = length(TZ)),\n                     cfact=nap[tz%%1==0] * pop, \n                     real=(nap*nap2)[tz%%1==0] * pop)\n\n## Plot using ggplot\ncnr_base_plot_micro_clinic +\n  geom_line(aes(x=yq, y=cfact, linetype=\"c'factual\", color=\"b) ACF\"), data=df_cnr_woc) +\n  geom_line(aes(x=yq, y=real, linetype=\"observed\", color=\"b) ACF\"), data=df_cnr_woc) +\n  scale_linetype_manual(values=c(2,1)) +\n  scale_color_manual(values=c(\"#46ACC8\",\"#B40F20\",\"#E58601\")) +\n  ylim(c(0,450))\n\n\n\n\nModel and predictions / point estimates for all form TB\nLess annotation here, it’s the same as above.\n\n\n# exactly same model, but run with new dataset for all form TB\nmod.woc.allf <- glm(data=all_f[acfarea==\"b) ACF\"],\n               family=poisson,\n               n ~\n                 offset(log(population)) +\n                 (1 + yq_num) +           # k_1 + s_1.t\n                 acftime + acftime:yq_num # I(t)(a+b.t)\n               )\n\ntheta.woc.allf <- list(\n  itz=t1:t2,\n  Pop=P,\n  k=coef(mod.woc.allf)['(Intercept)'],\n  s=coef(mod.woc.allf)['yq_num'],\n  a=coef(mod.woc.allf)['acftimeacf'],\n  b=coef(mod.woc.allf)['yq_num:acftimeacf']\n)\n\nnap.af <- with(data=theta.woc.allf,{exp(k + s*tz)}) #counterfactual: cases per one person per quarter (ie. no offset term)\nnap2.af <- with(data=theta.woc.allf,{exp(It*(a+b*tz))}) #ACF effect: cases per one person per quarter\nnapc.af <- (nap.af*nap2.af)[tz%%1==0] # what actually happened (ie. adding on ACF effect): cases per one person per quarter\n\ncnr1.af <- with(data=theta.woc.allf,{(exp(k + s*tz)) * 100000 * 4}) # cases per one person per quarter * 100,000 people * 4 quarters = CNR.  In counterfactual conditions.\ncnr2.af <- with(data=theta.woc.allf,{exp(It*(a+b*tz)) * 100000 * 4}) # cases per one person per quarter * 100,000 people * 4 quarters = CNR. Plus effect of ACF.\ncnr3.af <- (nap.af*nap2.af) * 400000\n\ndf_cnr_woc_af <- tibble(yq_num=tz, \n                     yq= seq(from=min(smp_c$yq), to=max(smp_c$yq + months(3)), length.out = length(tz)), # make 'tz' correspond to real dates\n                     cfact=cnr1.af, \n                     real=cnr3.af)\n\ndf_cases_woc_af <- tibble(yq_num=TZ, \n                     yq= seq(from=min(smp_c$yq), to=max(smp_c$yq + months(3)), length.out = length(TZ)),\n                     cfact=nap.af[tz%%1==0] * pop, \n                     real=(nap.af*nap2.af)[tz%%1==0] * pop)\n\ncnr_base_plot_all +\n  geom_line(aes(x=yq, y=cfact, linetype=\"c'factual\", color=\"b) ACF\"), data=df_cnr_woc_af) +\n  geom_line(aes(x=yq, y=real, linetype=\"observed\", color=\"b) ACF\"), data=df_cnr_woc_af) +\n  scale_linetype_manual(values=c(2,1)) +\n  scale_color_manual(values=c(\"#46ACC8\",\"#B40F20\",\"#E58601\")) +\n  ylim(c(0,850))\n\n\n\n\nDelta method to calculate CIs\nFirstly the formula\n\n\ndpars <- c('k','s','a','b') # this is a list of the parameters in the equation / model [these are the alphanumeric versions of greek letters for the general equation, in the model they get meaningful names]\n\n# expression = \"Creates or tests for objects of mode \"expression\".\n# This is the mathematical expression for the difference between the TB diagnoses over the sum of time (see appendix for equation in latex)\n# Functions for the difference between real and counterfactual\n# Need to differentiate by hand as R not clever enough to handle sum:\n# These are all functions of \"theta\"; when we come to use this function, theta is defined in above chunks.\n\nD.fun <- function(theta){\n  list2env(theta,envir = environment())\n  sum(Pop*(exp(a+k+(s+b)*itz)-exp(k+s*itz))) # cases\n}\n\ndD.fun <- function(theta){\n  list2env(theta,envir = environment())\n  c(sum(Pop*(exp(a+k+(s+b)*itz)-exp(k+s*itz))),\n    sum(Pop*itz*(exp(a+k+(s+b)*itz)-exp(k+s*itz))),\n    sum(Pop*(exp(a+k+(s+b)*itz))),\n    sum(Pop*itz*(exp(a+k+(s+b)*itz))))\n}\n\n# And version without population for CNR effects\nDcnr.fun <- function(theta){\n  list2env(theta,envir = environment())\n  mean((exp(a+k+(s+b)*itz)-exp(k+s*itz))*1e5*4)\n}\n\ndDcnr.fun <- function(theta){\n  list2env(theta,envir = environment())\n  c(mean((exp(a+k+(s+b)*itz)-exp(k+s*itz))*1e5*4),\n    mean(itz*(exp(a+k+(s+b)*itz)-exp(k+s*itz))*1e5*4),\n    mean((exp(a+k+(s+b)*itz))*1e5*4),\n    mean(itz*(exp(a+k+(s+b)*itz)))*1e5*4)\n}\n\n#' Checks: diagnoses / cases\ndf_cases_woc %>% filter(yq>=acf_start_date) %>% summarise(sum_real=sum(real), sum_cf=sum(cfact)) %>% mutate(diff=sum_real - sum_cf)\n\n\n# A tibble: 1 × 3\n  sum_real sum_cf  diff\n     <dbl>  <dbl> <dbl>\n1    1255.   775.  480.\n\nsum(pop*((nap2-1)*nap)[tz%%1==0]) #discrete version \n\n\n[1] 480.134\n\nD.fun(theta.woc)              #our formula - good!\n\n\n[1] 480.134\n\n# Checks: CNR\ndf_cnr_woc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(mean_real=mean(real), mean_cf=mean(cfact)) %>% mutate(diff=mean_real - mean_cf)\n\n\n# A tibble: 1 × 3\n  mean_real mean_cf  diff\n      <dbl>   <dbl> <dbl>\n1      263.    162.  101.\n\nsum(((nap2-1)*nap)[tz%%1==0] * 100000 * 4)/ 14 # multiply by 100,000 people, by 4 quarters per year, divide by 14 months of ACF (as pre-ACF there are 0 extra cases)\n\n\n[1] 100.977\n\nDcnr.fun(theta.woc)              # our formula - this is right\n\n\n[1] 100.977\n\nAnd now use formulas to calcuate difference, variance and CI\n\n\n#' The names in the variance-covariance matrix are in the same order as the gradient terms, so:\nSig.woc <- vcov(mod.woc)\nrownames(Sig.woc) <- colnames(Sig.woc) <- dpars\n\n#' Function to compute variance using delta approximation:\ndelta.se.woc <- function(theta,sig){\n  g <- dD.fun(theta)\n  V <- t(g) %*% sig %*% (g)\n  sqrt(V)\n}\ndelta.se.woc(theta.woc, Sig.woc) #test - what is standard error?\n\n\n         [,1]\n[1,] 143.8592\n\ndelta.cnr.se.woc <- function(theta, sig){\n  g <- dDcnr.fun(theta)\n  V <- t(g) %*% sig %*% (g)\n  sqrt(V)\n}\ndelta.cnr.se.woc(theta.woc, Sig.woc) #test - what is standard error?\n\n\n         [,1]\n[1,] 29.89557\n\n#' This would give the estimate as 95% CI\nwoc.result <- c(D.fun(theta.woc),\n                D.fun(theta.woc) - 1.96*delta.se.woc(theta.woc, Sig.woc),\n                D.fun(theta.woc) + 1.96*delta.se.woc(theta.woc, Sig.woc))\nwoc.result\n\n\n[1] 480.1340 198.1700 762.0981\n\nwoc.cnr.result <- c(Dcnr.fun(theta.woc),\n                   Dcnr.fun(theta.woc) -1.96*delta.cnr.se.woc(theta.woc, Sig.woc),\n                   Dcnr.fun(theta.woc) + 1.96*delta.cnr.se.woc(theta.woc, Sig.woc))\nwoc.cnr.result\n\n\n[1] 100.97697  42.38166 159.57229\n\n# And for the relative increase (rather than absolute increase)\n# From PD email: \"In short, the proportion relative increase CIs should be R - 1.96*s/M to R + 1.96*s/M.\" R = relative difference, M= mean CNR observed, s.e. = st. error\n\nabs <- (df_cnr_woc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(mean_real=mean(real), mean_cf=mean(cfact)) %>% mutate(diff=mean_real - mean_cf))$diff\nmean_cnr <- (df_cnr_woc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(mean_real=mean(real), mean_cf=mean(cfact)) %>% mutate(diff=mean_real - mean_cf))$mean_cf\nrel_diff <- abs / mean_cnr\nse <- delta.cnr.se.woc(theta.woc, Sig.woc)[1]\n\n# Relative differences\nc(rel_diff, (rel_diff - 1.96*se/mean_cnr),(rel_diff + 1.96*se/mean_cnr))\n\n\n[1] 0.6220157 0.2610700 0.9829615\n\nRepeat for all form TB\n\n\nSig.woc.af <- vcov(mod.woc.allf)\nrownames(Sig.woc.af) <- colnames(Sig.woc.af) <- dpars\n\nwoc.result.af <- c(D.fun(theta.woc.allf),\n                D.fun(theta.woc.allf) - 1.96*delta.se.woc(theta.woc.allf, Sig.woc.af),\n                D.fun(theta.woc.allf) + 1.96*delta.se.woc(theta.woc.allf, Sig.woc.af))\nwoc.result.af\n\n\n[1] 1614.607 1245.178 1984.035\n\nwoc.cnr.result.af <- c(Dcnr.fun(theta.woc.allf),\n                   Dcnr.fun(theta.woc.allf) -1.96*delta.cnr.se.woc(theta.woc.allf, Sig.woc.af),\n                   Dcnr.fun(theta.woc.allf) + 1.96*delta.cnr.se.woc(theta.woc.allf, Sig.woc.af))\nwoc.cnr.result.af\n\n\n[1] 337.4240 260.5197 414.3283\n\n# And the relative difference\nabs.af <- (df_cnr_woc_af %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(mean_real=mean(real), mean_cf=mean(cfact)) %>% mutate(diff=mean_real - mean_cf))$diff\nmean_cnr.af <- (df_cnr_woc_af %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(mean_real=mean(real), mean_cf=mean(cfact)) %>% mutate(diff=mean_real - mean_cf))$mean_cf\nrel_diff.af <- abs.af / mean_cnr.af\nse.af <- delta.cnr.se.woc(theta.woc.allf, Sig.woc.af)[1]\n\nc(rel_diff.af, (rel_diff.af - 1.96*se/mean_cnr),(rel_diff.af + 1.96*se/mean_cnr))\n\n\n[1] 1.005841 0.644895 1.366787\n\nWith control\nModel\n\n\n#' Here, I'm creating the factors by hand so that: 1) we can generate a counterfactual using `predict` to check this formula; 2) I understand the parametrization, rather than trying to reverse-engineer how default R syntax handles things. The notation follows that in the definitions section.\n\ntmp <- copy(smp_c) %>% as.data.table()                       #make a copy of the data\ntmp[,com:=ifelse(acfarea==\"b) ACF\",1,0)] #community indicator 1=ACF\ntmp[,It:=ifelse(acftime==\"acf\",1,0)]     #ACF time indicator (as above)\ntmp[,tz:=yq_num]                         #time\ntmp[,Ittz:=It*tz]                        #ACF:time\ntmp[,Itc:=It*com]                        #ACF:community\ntmp[,Ittzc:=It*tz*com]                   #ACF:time:community\n\n#' Regression\nmod.wc <- glm(data=tmp,\n              family=poisson,\n              n ~\n                offset(log(population)) +\n                1 + \n                com +     # k_c\n                tz +      #s.t\n                It + \n                Ittz +    # control (A + B.t)*It\n                Itc +  \n                Ittzc     # ACF com increment (a+b.t)*It\n              )\n\nsummary(mod.wc)\n\n\n\nCall:\nglm(formula = n ~ offset(log(population)) + 1 + com + tz + It + \n    Ittz + Itc + Ittzc, family = poisson, data = tmp)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-3.0975  -0.9402  -0.3503   0.8241   4.8351  \n\nCoefficients:\n             Estimate Std. Error  z value Pr(>|z|)    \n(Intercept) -7.568890   0.046326 -163.381  < 2e-16 ***\ncom          0.259291   0.050310    5.154 2.55e-07 ***\ntz          -0.051830   0.009430   -5.496 3.88e-08 ***\nIt           0.132776   0.106859    1.243  0.21404    \nIttz         0.023811   0.011255    2.116  0.03438 *  \nItc          0.467066   0.153897    3.035  0.00241 ** \nIttzc       -0.012593   0.009347   -1.347  0.17790    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 433.48  on 45  degrees of freedom\nResidual deviance: 124.99  on 39  degrees of freedom\nAIC: 433.6\n\nNumber of Fisher Scoring iterations: 4\n\nThe point estimates (Bac+)\n\n\n#' Parameters from the w/control version\ndparswc <- c('k0','k','s','A','B','a','b')\nbeta <- coef(mod.wc)\nSig.v <- Sig.wc <- vcov(mod.wc)\nrownames(Sig.v) <- colnames(Sig.v) <- dparswc #same order, diff names\n\n#' Parameters as list:\ntheta.wc <- list(\n  Pop=P, # (Does it matter than here \"P\" is just for ACF communities? (Defined earlier))\n  itz=t1:t2,\n  k0=beta['(Intercept)'],k=beta['com'],\n  s=beta['tz'],\n  ## counter factual effect:\n  A=beta['It'],B=beta['Ittz'],\n  ## full effect:\n  a=beta['Itc'],b=beta['Ittzc'])\n\n# these were defined above, but recreating them here as a reminder that they exist\ntz <- seq(from=min(smp_c$yq_num),to=max(smp_c$yq_num),by=0.1) #time\nIt <- ifelse(tz>=t1 & tz<=t2,1,0)  #indicator\n\n#' Check understanding of parameters - as before these are all per one person per quarter (haven't added on 'pop' term)\n## nonACF com\nnapc <- with(data=theta.wc,{exp(k0 + s*tz + It*(A + B*tz))})\n## ACF com - without ACF\nnapa0 <- with(data=theta.wc,{exp(k0+k + s*tz + It*(A + B*tz))}) # this is our counterfactual\n## ACF com - with ACF\nnapa <- with(data=theta.wc,{exp(It*(a + b*tz))})*napa0\n\n# And make into a tibble;\ndf_cnr_wc <- tibble(\n  yq_num=tz,\n  yq= seq(from=min(smp_c$yq), to=max(smp_c$yq + months(3)), length.out = length(tz)),\n  real=napa * 1e5 * 4,\n  nonacf=napc * 1e5 * 4,\n  cfact=napa0 * 1e5 * 4)\n\ndf_cases_wc <- tibble(\n  yq_num=TZ,\n  yq= seq(from=min(smp_c$yq), to=max(smp_c$yq + months(3)), length.out = length(TZ)),\n  nonacf=napc[tz%%1==0]*popc,\n  cfact=napa0[tz%%1==0]*pop,\n  real=napa[tz%%1==0]*pop)\n\n# And plot;\ncnr_base_plot_micro_clinic +\n  geom_line(aes(x=yq, y=real, linetype=\"observed\", color=\"b) ACF\"), data=df_cnr_wc) +\n  geom_line(aes(x=yq, y=nonacf, linetype=\"observed\", color=\"a) Non-ACF\"), data=df_cnr_wc) +\n  geom_line(aes(x=yq, y=cfact, linetype=\"c'fact\", color=\"c) C'fact\"), data=df_cnr_wc) +\n  scale_linetype_manual(values=c(2,1)) +\n  scale_color_manual(values=c(\"#46ACC8\",\"#B40F20\",\"#E58601\")) +\n  ylim(c(0,420))\n\n\n\n# Looks good!!\n\n\n\nThe point estimates (all form TB)\n\n\ntmp2 <- copy(all_f) %>% as.data.table()                       #make a copy of the data\ntmp2[,com:=ifelse(acfarea==\"b) ACF\",1,0)] #community indicator 1=ACF\ntmp2[,It:=ifelse(acftime==\"acf\",1,0)]     #ACF time indicator (as above)\ntmp2[,tz:=yq_num]                         #time\ntmp2[,Ittz:=It*tz]                        #ACF:time\ntmp2[,Itc:=It*com]                        #ACF:community\ntmp2[,Ittzc:=It*tz*com]                   #ACF:time:community\n\nmod.wc.allf <- glm(data=tmp2,\n              family=poisson,\n              n ~\n                offset(log(population)) +\n                1 + \n                com +     # k_c\n                tz +      #s.t\n                It + \n                Ittz +    # control (A + B.t)*It\n                Itc +  \n                Ittzc     # ACF com increment (a+b.t)*It\n              )\n\nbeta.allf <- coef(mod.wc.allf)\nSig.v.allf <- Sig.wc.allf <- vcov(mod.wc.allf)\nrownames(Sig.v.allf) <- colnames(Sig.v.allf) <- dparswc #same order, diff names\n\n# beta <- coef(mod.wc)\n# Sig.v <- Sig.wc <- vcov(mod.wc)\n# rownames(Sig.v) <- colnames(Sig.v) <- dparswc #same order, diff names\n\ntheta.wc.allf <- list(\n  Pop=P, # (Does it matter than here \"P\" is just for ACF communities? (Defined earlier))\n  itz=t1:t2,\n  k0=beta.allf['(Intercept)'],k=beta.allf['com'],\n  s=beta.allf['tz'],\n  ## counter factual effect:\n  A=beta.allf['It'],B=beta.allf['Ittz'],\n  ## full effect:\n  a=beta.allf['Itc'],b=beta.allf['Ittzc'])\n\n\nnapc.af <- with(data=theta.wc.allf,{exp(k0 + s*tz + It*(A + B*tz))})\nnapa0.af <- with(data=theta.wc.allf,{exp(k0+k + s*tz + It*(A + B*tz))}) # this is our counterfactual\nnapa.af <- with(data=theta.wc.allf,{exp(It*(a + b*tz))})*napa0.af\n\n# And make into a tibble;\ndf_cnr_wc_af <- tibble(\n  yq_num=tz,\n  yq= seq(from=min(smp_c$yq), to=max(smp_c$yq + months(3)), length.out = length(tz)),\n  real=napa.af * 1e5 * 4,\n  nonacf=napc.af * 1e5 * 4,\n  cfact=napa0.af * 1e5 * 4)\n\ndf_cases_wc_af <- tibble(\n  yq_num=TZ,\n  yq= seq(from=min(smp_c$yq), to=max(smp_c$yq + months(3)), length.out = length(TZ)),\n  nonacf=napc.af[tz%%1==0]*popc,\n  cfact=napa0.af[tz%%1==0]*pop,\n  real=napa.af[tz%%1==0]*pop)\n\n# And plot;\ncnr_base_plot_all +\n  geom_line(aes(x=yq, y=real, linetype=\"observed\", color=\"b) ACF\"), data=df_cnr_wc_af) +\n  geom_line(aes(x=yq, y=nonacf, linetype=\"observed\", color=\"a) Non-ACF\"), data=df_cnr_wc_af) +\n  geom_line(aes(x=yq, y=cfact, linetype=\"c'fact\", color=\"c) C'fact\"), data=df_cnr_wc_af) +\n  scale_linetype_manual(values=c(2,1)) +\n  scale_color_manual(values=c(\"#46ACC8\",\"#B40F20\",\"#E58601\")) +\n  ylim(c(0,850))\n\n\n\n\nThe formula for the difference\n\n\ndparswc <- c('k0','k','s','A','B','a','b')\n\nDwc.fun <- function(theta){\n  list2env(theta,envir = environment())\n  sum(Pop*(exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)) # this is for cases\n}\n\n## diff by k,s,a,b,abar,bbar\ndDwc.fun <- function(theta){\n  list2env(theta,envir = environment())\n  c(\n    sum(Pop*(exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)), #(Again, this definitely right with \"Pop\" just being ACF area?)\n    sum(Pop*(exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)),\n    sum(Pop*(exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)*itz),\n    sum(Pop*(exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)),\n    sum(Pop*(exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)*itz),\n    sum(Pop*(exp(a+b*itz))*exp(k0+k+A+(s+B)*itz)),\n    sum(Pop*(exp(a+b*itz)*itz)*exp(k0+k+A+(s+B)*itz))\n    )\n}\n\n#' and the CNR versions without population\nDwc.cnr.fun <- function(theta){\n  list2env(theta,envir = environment())\n  mean((exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)*1e5*4)\n}\n\ndDwc.cnr.fun <- function(theta){\n  list2env(theta,envir = environment())\n  c(\n    mean((exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)*1e5*4),\n    mean((exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)*1e5*4),\n    mean((exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)*itz*1e5*4),\n    mean((exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)*1e5*4),\n    mean((exp(a+b*itz)-1)*exp(k0+k+A+(s+B)*itz)*itz*1e5*4),\n    mean((exp(a+b*itz))*exp(k0+k+A+(s+B)*itz)*1e5*4),\n    mean((exp(a+b*itz)*itz)*exp(k0+k+A+(s+B)*itz)*1e5*4)\n  )\n}\n\n#' Check formula against predictions: YES\ndf_cases_wc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(real=sum(real), cfact=sum(cfact), nonacf=sum(nonacf)) %>% mutate(diff=real - cfact)\n\n\n# A tibble: 1 × 4\n   real cfact nonacf  diff\n  <dbl> <dbl>  <dbl> <dbl>\n1 1255.  951.  1638.  304.\n\nDwc.fun(theta.wc)\n\n\n[1] 304.1835\n\nsum(pop*(napa-napa0)[tz%%1==0])\n\n\n[1] 304.1835\n\n#' Check CNRs\ndf_cnr_wc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(real=mean(real), cfact=mean(cfact), nonacf=mean(nonacf)) %>% mutate(diff=real - cfact)\n\n\n# A tibble: 1 × 4\n   real cfact nonacf  diff\n  <dbl> <dbl>  <dbl> <dbl>\n1  263.  199.   154.  64.1\n\nsum((napa-napa0)[tz%%1==0]) # as above this isn't quite right, but not sure how to fix it.  Probably doesn't matter though.\n\n\n[1] 0.002242842\n\nDwc.cnr.fun(theta.wc)\n\n\n[1] 64.08121\n\nAnd the SE and CI of difference (Bac+)\n\n\n#' Function to compute variance using delta approximation:\ndelta.se.wc <- function(theta, sv){\n  g <- dDwc.fun(theta)\n  V <- t(g) %*% sv %*% (g)\n  sqrt(V)\n}\ndelta.se.wc(theta.wc, Sig.v) #check\n\n\n        [,1]\n[1,] 63.9933\n\ndelta.cnr.se.wc <- function(theta, sv){\n  g <- dDwc.cnr.fun(theta)\n  V <- t(g) %*% sv %*% (g)\n  sqrt(V)\n}\ndelta.cnr.se.wc(theta.wc, Sig.v) #check\n\n\n         [,1]\n[1,] 13.41644\n\n#' This would give the estimate as 95% CI\nwc.result <- c(Dwc.fun(theta.wc),\n               Dwc.fun(theta.wc) - 1.96*delta.se.wc(theta.wc, Sig.v),\n               Dwc.fun(theta.wc) + 1.96*delta.se.wc(theta.wc, Sig.v))\nwc.result\n\n\n[1] 304.1835 178.7566 429.6103\n\n#' CNR result\nwc.cnr.result <- c(Dwc.cnr.fun(theta.wc),\n                   Dwc.cnr.fun(theta.wc) -\n                   1.96*delta.cnr.se.wc(theta.wc,Sig.v),\n                   Dwc.cnr.fun(theta.wc) +\n                   1.96*delta.cnr.se.wc(theta.wc,Sig.v))\nwc.cnr.result\n\n\n[1] 64.08121 37.78498 90.37744\n\n# And relative increase\nabs <- wc.cnr.result[1]\nM <- (df_cnr_wc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(real=mean(real), cfact=mean(cfact), nonacf=mean(nonacf)) %>% mutate(diff=real - cfact))$cfact\nR <- abs / M\nse <- delta.cnr.se.wc(theta.wc,Sig.v)[1]\n\n(R - 1.96*se/M)\n\n\n[1] 0.1896512\n\n(R + 1.96*se/M)\n\n\n[1] 0.4536245\n\nR\n\n\n[1] 0.3216378\n\nSE and CI of difference (all form)\n\n\nwc.result.af <- c(Dwc.fun(theta.wc.allf),\n                Dwc.fun(theta.wc.allf) - 1.96*delta.se.wc(theta.wc.allf, Sig.v.allf),\n                Dwc.fun(theta.wc.allf) + 1.96*delta.se.wc(theta.wc.allf, Sig.v.allf))\nwc.result.af\n\n\n[1] 1142.2298  964.4464 1320.0132\n\nwc.cnr.result.af <- c(Dwc.cnr.fun(theta.wc.allf),\n                   Dwc.cnr.fun(theta.wc.allf) -1.96*delta.cnr.se.wc(theta.wc.allf, Sig.v.allf),\n                   Dwc.cnr.fun(theta.wc.allf) + 1.96*delta.cnr.se.wc(theta.wc.allf, Sig.v.allf))\nwc.cnr.result.af\n\n\n[1] 239.4112 202.1827 276.6397\n\n# And relative increase\nabs.af <- wc.cnr.result.af[1]\nM.af <- (df_cnr_wc_af %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(real=mean(real), cfact=mean(cfact), nonacf=mean(nonacf)) %>% mutate(diff=real - cfact))$cfact\nR.af <- abs.af / M.af\nse.af <- delta.cnr.se.wc(theta.wc.allf,Sig.v.allf)[1]\n\n(R.af - 1.96*se.af/M.af)\n\n\n[1] 0.4664203\n\n(R.af + 1.96*se.af/M.af)\n\n\n[1] 0.6381872\n\nR.af\n\n\n[1] 0.5523037\n\nCollecting the estimates and their CIs here in one place\nFor table 2 (see b_tableandfig.Rmd)\n\n\na <- df_cases_woc %>% filter(yq>=acf_start_date) %>% summarise(sum_real=sum(real), sum_cf=sum(cfact)) %>% mutate(diff=sum_real - sum_cf)\nc <- df_cnr_woc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(mean_real=mean(real), mean_cf=mean(cfact)) %>% mutate(diff=mean_real - mean_cf)\n\na <- round(a)\nc <- round(c)\nwoc.result <- round(woc.result,digits=0)\nwoc.cnr.result <- round(woc.cnr.result,digits=0)\n\nb <- df_cases_woc_af %>% filter(yq>=acf_start_date) %>% summarise(sum_real=sum(real), sum_cf=sum(cfact)) %>% mutate(diff=sum_real - sum_cf)\nd <- df_cnr_woc_af %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(mean_real=mean(real), mean_cf=mean(cfact)) %>% mutate(diff=mean_real - mean_cf)\n\nb <- round(b)\nd <- round(d)\nwoc.result.af <-round(woc.result.af)\nwoc.cnr.result.af <- round(woc.cnr.result.af)\n\nwoc <- tibble(model=rep(\"woc\", each=4),\n              scenario=c(\"observed\", \"cfact (woc)\", \"observed\", \"cfact (woc)\"),\n              tb_type=rep(c(\"smp\",\"allf\"), each=2),\n              sum_cases=c(a$sum_real, a$sum_cf, b$sum_real, b$sum_cf),\n              mean_cnr=c(c$mean_real, c$mean_cf, d$mean_real, d$mean_cf),\n              diff_cases=c(\n                paste0(woc.result[1],\" (\",woc.result[2],\" to \", woc.result[3],\")\"),\n                paste0(woc.result[1],\" (\",woc.result[2],\" to \", woc.result[3],\")\"),\n                paste0(woc.result.af[1],\" (\",woc.result.af[2],\" to \", woc.result.af[3],\")\"),\n                paste0(woc.result.af[1],\" (\",woc.result.af[2],\" to \", woc.result.af[3],\")\")),\n              diff_cnr=c(\n                paste0(woc.cnr.result[1],\" (\",woc.cnr.result[2],\" to \", woc.cnr.result[3],\")\"),\n                paste0(woc.cnr.result[1],\" (\",woc.cnr.result[2],\" to \", woc.cnr.result[3],\")\"),\n                paste0(woc.cnr.result.af[1],\" (\",woc.cnr.result.af[2],\" to \", woc.cnr.result.af[3],\")\"),\n                paste0(woc.cnr.result.af[1],\" (\",woc.cnr.result.af[2],\" to \", woc.cnr.result.af[3],\")\"))\n              )\n\ne <- df_cases_wc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(real=sum(real), cfact=sum(cfact), nonacf=sum(nonacf)) %>% mutate(diff=real - cfact)\nf <- df_cnr_wc %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(real=mean(real), cfact=mean(cfact), nonacf=mean(nonacf)) %>% mutate(diff=real - cfact)\ng <- df_cases_wc_af %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(real=sum(real), cfact=sum(cfact), nonacf=sum(nonacf)) %>% mutate(diff=real - cfact)\nh <- df_cnr_wc_af %>% filter(yq_num%%1==0) %>% filter(yq>=acf_start_date) %>% summarise(real=mean(real), cfact=mean(cfact), nonacf=mean(nonacf)) %>% mutate(diff=real - cfact)\n\ne <- round(e)\nf <- round(f)\ng <- round(g)\nh <- round(h)\n\nwc.result <- round(wc.result)\nwc.result.af <- round(wc.result.af)\n\nwc.cnr.result <- round(wc.cnr.result)\nwc.cnr.result.af <-  round(wc.cnr.result.af)\n\nwc <- tibble(model=rep(\"wc\", each=4),\n              scenario=c(\"observed\", \"cfact (woc)\", \"observed\", \"cfact (woc)\"),\n              tb_type=rep(c(\"smp\",\"allf\"), each=2),\n              sum_cases=c(e$real, e$cfact, g$real, g$cfact),\n              mean_cnr=c(f$real, f$cfact, h$real, h$cfact),\n              diff_cases=c(\n                paste0(wc.result[1],\" (\",wc.result[2],\" to \", wc.result[3],\")\"),\n                paste0(wc.result[1],\" (\",wc.result[2],\" to \", wc.result[3],\")\"),\n                paste0(wc.result.af[1],\" (\",wc.result.af[2],\" to \", wc.result.af[3],\")\"),\n                paste0(wc.result.af[1],\" (\",wc.result.af[2],\" to \", wc.result.af[3],\")\")),\n             diff_cnr=c(\n                paste0(wc.cnr.result[1],\" (\",wc.cnr.result[2],\" to \", wc.cnr.result[3],\")\"),\n                paste0(wc.cnr.result[1],\" (\",wc.cnr.result[2],\" to \", wc.cnr.result[3],\")\"),\n                paste0(wc.cnr.result.af[1],\" (\",wc.cnr.result.af[2],\" to \", wc.cnr.result.af[3],\")\"),\n                paste0(wc.cnr.result.af[1],\" (\",wc.cnr.result.af[2],\" to \", wc.cnr.result.af[3],\")\"))\n              )\n\n\nresult <- wc %>% rbind(woc)\nresult\n\n\n# A tibble: 8 × 7\n  model scenario    tb_type sum_cases mean_cnr diff_cases    diff_cnr \n  <chr> <chr>       <chr>       <dbl>    <dbl> <chr>         <chr>    \n1 wc    observed    smp          1255      263 304 (179 to … 64 (38 t…\n2 wc    cfact (woc) smp           951      199 304 (179 to … 64 (38 t…\n3 wc    observed    allf         3213      673 1142 (964 to… 239 (202…\n4 wc    cfact (woc) allf         2071      433 1142 (964 to… 239 (202…\n5 woc   observed    smp          1255      263 480 (198 to … 101 (42 …\n6 woc   cfact (woc) smp           775      162 480 (198 to … 101 (42 …\n7 woc   observed    allf         3213      673 1615 (1245 t… 337 (261…\n8 woc   cfact (woc) allf         1598      335 1615 (1245 t… 337 (261…\n\nAnd save the results so that can make a well formatted table in next step.\n\n\nsaveRDS(result, file=here(\"data\",\"results_summary.rds\"))\n\n\n\n\n\n\n",
      "last_modified": "2022-07-20T21:30:17+01:00"
    },
    {
      "path": "b_tableandfig.html",
      "title": "A Tables and Figures",
      "description": "Code to create tables and figures from our paper.\n",
      "author": [
        {
          "name": "Rachael Burke",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nThis (A) markdown shows the descriptive tables and figures, and the “base” plots of actual observed TB diagnoses. We use this base plots in the “analysis” markdown to build up lines showing predictions [including showing our working as going along].\n\n\n\n",
      "last_modified": "2022-07-20T21:30:17+01:00"
    },
    {
      "path": "index.html",
      "title": "TB ACF",
      "description": "A website to share code and data from our paper about effects of ACF on TB notications in Blantyre\n",
      "author": [],
      "contents": "\nThis website is to accompany the paper XXXXX.\nThe github repo is at https://github.com/rachaelmburke/tbacf\n\n\n\n",
      "last_modified": "2022-07-20T21:30:18+01:00"
    }
  ],
  "collections": []
}
